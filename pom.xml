<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.1</version>
    </parent>

    <groupId>com.techorgx.api</groupId>
    <artifactId>example-service</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <name>example-service</name>
    <description>description</description>


    <modules>
        <module>example-api-protos</module>
        <module>grpc</module>
    </modules>

    <profiles>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os.detected.classifier>osx-x86_64</os.detected.classifier>
            </properties>
        </profile>
    </profiles>

    <properties>
        <main.basedir>${project.basedir}</main.basedir>
        <java.version>17</java.version>
        <kotlin.version>1.8.0</kotlin.version>
        <kotlinx.coroutines.version>1.7.3</kotlinx.coroutines.version>
        <grpc.version>1.58.0</grpc.version>
        <grpc.kotlin.version>1.4.0</grpc.kotlin.version>
        <protobuf.version>3.24.4</protobuf.version>
        <log4j.version>2.17.1</log4j.version>
        <jackson.version>2.15.1</jackson.version>
        <bson.version>2.3</bson.version>
        <junit.version>4.13</junit.version>
        <lombok.version>1.18.26</lombok.version>
        <javax-annotation-api.version>1.3.2</javax-annotation-api.version>
        <protobuf-java-util.version>3.21.5</protobuf-java-util.version>
        <bson.version>2.3</bson.version>
        <io-github-lognet.version>5.1.5</io-github-lognet.version>
        <spring-boot-maven-plugin.version>2.6.0</spring-boot-maven-plugin.version>
<!--     Repackaging-->
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
<!--     Jwt auth-->
        <fusionauth-jwt.version>5.3.0</fusionauth-jwt.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--    This make it easier to use gRPC in a Spring Boot application-->
        <!--     Always use compatible grpc and spring boot versions with this dependency
                 https://github.com/LogNet/grpc-spring-boot-starter/blob/master/ReleaseNotes.md -->
        <dependency>
            <groupId>io.github.lognet</groupId>
            <artifactId>grpc-spring-boot-starter</artifactId>
            <version>${io-github-lognet.version}</version>
        </dependency>

        <!--    Kotlin dependencies-->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx.coroutines.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax-annotation-api.version}</version>
        </dependency>

        <!--    Grpc dependencies-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-kotlin-stub</artifactId>
            <version>${grpc.kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>

        <!--    Protobuf dependencies-->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-kotlin</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>${protobuf-java-util.version}</version>
        </dependency>

        <!--    Server for grpc, shaded-->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>${grpc.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!--    Logging-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!--   Jackson bindings-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!--       Test dependencies-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <!--       Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>${protobuf-java-util.version}</version>
        </dependency>

        <dependency>
            <groupId>io.fusionauth</groupId>
            <artifactId>fusionauth-jwt</artifactId>
            <version>${fusionauth-jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>bson</artifactId>
            <version>${bson.version}</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>

        <!--    This is used to detect the operating system (OS) and architecture on which the
                Maven build is running-->
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
            </extension>
        </extensions>

        <plugins>
            <!--         Compile the proto in Kotlin-->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                            <pluginId>grpc-java</pluginId>
                            <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                            <protocPlugins>
                                <protocPlugin>
                                    <id>grpc-kotlin</id>
                                    <groupId>io.grpc</groupId>
                                    <artifactId>protoc-gen-grpc-kotlin</artifactId>
                                    <version>${grpc.kotlin.version}</version>
                                    <classifier>jdk8</classifier>
                                    <mainClass>io.grpc.kotlin.generator.GeneratorRunner</mainClass>
                                </protocPlugin>
                            </protocPlugins>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-kt</id>
                        <goals>
                            <goal>compile-custom</goal>
                        </goals>
                        <configuration>
                            <!--suppress UnresolvedMavenProperty -->
                            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                            <outputDirectory>${project.build.directory}/generated-sources/protobuf/kotlin</outputDirectory>
                            <pluginId>kotlin</pluginId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
<!--        Enables various tasks related to Kotlin compilation, testing, and other Kotlin-specific features.-->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <arg>-opt-in=kotlin.RequiresOptIn</arg>
                    </args>
                </configuration>
            </plugin>

            <!--       Compiles Kotlin source code during the Maven build process-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--         Compiles Java source code during the Maven build process-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.gantsign.maven</groupId>
                <artifactId>ktlint-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <sourceRoots>${project.build.sourceDirectory}</sourceRoots>
                </configuration>
                <executions>
                    <execution>
                        <id>format-and-check</id>
                        <goals>
                            <goal>format</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>